/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "AccessControlEnumerableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControlEnumerableUpgradeable__factory>;
    getContractFactory(
      name: "AccessControlUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControlUpgradeable__factory>;
    getContractFactory(
      name: "IAccessControlEnumerableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccessControlEnumerableUpgradeable__factory>;
    getContractFactory(
      name: "IAccessControlUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccessControlUpgradeable__factory>;
    getContractFactory(
      name: "OwnableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OwnableUpgradeable__factory>;
    getContractFactory(
      name: "PaymentSplitterUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PaymentSplitterUpgradeable__factory>;
    getContractFactory(
      name: "GovernorCountingSimpleUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorCountingSimpleUpgradeable__factory>;
    getContractFactory(
      name: "GovernorProposalThresholdUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorProposalThresholdUpgradeable__factory>;
    getContractFactory(
      name: "GovernorTimelockControlUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorTimelockControlUpgradeable__factory>;
    getContractFactory(
      name: "IGovernorTimelockUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGovernorTimelockUpgradeable__factory>;
    getContractFactory(
      name: "GovernorUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorUpgradeable__factory>;
    getContractFactory(
      name: "IGovernorUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGovernorUpgradeable__factory>;
    getContractFactory(
      name: "TimelockControllerUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TimelockControllerUpgradeable__factory>;
    getContractFactory(
      name: "PausableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PausableUpgradeable__factory>;
    getContractFactory(
      name: "ERC721Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Upgradeable__factory>;
    getContractFactory(
      name: "ERC721EnumerableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721EnumerableUpgradeable__factory>;
    getContractFactory(
      name: "IERC721EnumerableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721EnumerableUpgradeable__factory>;
    getContractFactory(
      name: "IERC721MetadataUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721MetadataUpgradeable__factory>;
    getContractFactory(
      name: "IERC721ReceiverUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721ReceiverUpgradeable__factory>;
    getContractFactory(
      name: "IERC721Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Upgradeable__factory>;
    getContractFactory(
      name: "ERC165Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165Upgradeable__factory>;
    getContractFactory(
      name: "IERC165Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165Upgradeable__factory>;
    getContractFactory(
      name: "CloneFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CloneFactory__factory>;
    getContractFactory(
      name: "ERC721CheckpointableUpgradable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721CheckpointableUpgradable__factory>;
    getContractFactory(
      name: "ERC721DAODeployer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721DAODeployer__factory>;
    getContractFactory(
      name: "ERC721DAOToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721DAOToken__factory>;
    getContractFactory(
      name: "ERC721Governor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Governor__factory>;
    getContractFactory(
      name: "ERC721Timelock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Timelock__factory>;
    getContractFactory(
      name: "FixedPriceMinter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FixedPriceMinter__factory>;
    getContractFactory(
      name: "FixedPriceSpecificIDMinter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FixedPriceSpecificIDMinter__factory>;
    getContractFactory(
      name: "GovernorVotesERC721QuorumFractionUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorVotesERC721QuorumFractionUpgradeable__factory>;
    getContractFactory(
      name: "GovernorVotesERC721Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorVotesERC721Upgradeable__factory>;
    getContractFactory(
      name: "IERC721Minter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Minter__factory>;
    getContractFactory(
      name: "Multicall",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Multicall__factory>;
    getContractFactory(
      name: "YourContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.YourContract__factory>;

    getContractAt(
      name: "AccessControlEnumerableUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControlEnumerableUpgradeable>;
    getContractAt(
      name: "AccessControlUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControlUpgradeable>;
    getContractAt(
      name: "IAccessControlEnumerableUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAccessControlEnumerableUpgradeable>;
    getContractAt(
      name: "IAccessControlUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAccessControlUpgradeable>;
    getContractAt(
      name: "OwnableUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OwnableUpgradeable>;
    getContractAt(
      name: "PaymentSplitterUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PaymentSplitterUpgradeable>;
    getContractAt(
      name: "GovernorCountingSimpleUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorCountingSimpleUpgradeable>;
    getContractAt(
      name: "GovernorProposalThresholdUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorProposalThresholdUpgradeable>;
    getContractAt(
      name: "GovernorTimelockControlUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorTimelockControlUpgradeable>;
    getContractAt(
      name: "IGovernorTimelockUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGovernorTimelockUpgradeable>;
    getContractAt(
      name: "GovernorUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorUpgradeable>;
    getContractAt(
      name: "IGovernorUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGovernorUpgradeable>;
    getContractAt(
      name: "TimelockControllerUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TimelockControllerUpgradeable>;
    getContractAt(
      name: "PausableUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PausableUpgradeable>;
    getContractAt(
      name: "ERC721Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Upgradeable>;
    getContractAt(
      name: "ERC721EnumerableUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721EnumerableUpgradeable>;
    getContractAt(
      name: "IERC721EnumerableUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721EnumerableUpgradeable>;
    getContractAt(
      name: "IERC721MetadataUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721MetadataUpgradeable>;
    getContractAt(
      name: "IERC721ReceiverUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721ReceiverUpgradeable>;
    getContractAt(
      name: "IERC721Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Upgradeable>;
    getContractAt(
      name: "ERC165Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165Upgradeable>;
    getContractAt(
      name: "IERC165Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165Upgradeable>;
    getContractAt(
      name: "CloneFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CloneFactory>;
    getContractAt(
      name: "ERC721CheckpointableUpgradable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721CheckpointableUpgradable>;
    getContractAt(
      name: "ERC721DAODeployer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721DAODeployer>;
    getContractAt(
      name: "ERC721DAOToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721DAOToken>;
    getContractAt(
      name: "ERC721Governor",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Governor>;
    getContractAt(
      name: "ERC721Timelock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Timelock>;
    getContractAt(
      name: "FixedPriceMinter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FixedPriceMinter>;
    getContractAt(
      name: "FixedPriceSpecificIDMinter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FixedPriceSpecificIDMinter>;
    getContractAt(
      name: "GovernorVotesERC721QuorumFractionUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorVotesERC721QuorumFractionUpgradeable>;
    getContractAt(
      name: "GovernorVotesERC721Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorVotesERC721Upgradeable>;
    getContractAt(
      name: "IERC721Minter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Minter>;
    getContractAt(
      name: "Multicall",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Multicall>;
    getContractAt(
      name: "YourContract",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.YourContract>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
