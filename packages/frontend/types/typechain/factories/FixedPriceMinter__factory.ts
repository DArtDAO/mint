/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  FixedPriceMinter,
  FixedPriceMinterInterface,
} from "../FixedPriceMinter";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
    ],
    name: "PayeeAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PaymentReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PaymentReleased",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract ERC721DAOToken",
        name: "token_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maxTokens_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenPrice_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxMintsPerTx_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startingBlock_",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "payees_",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "shares_",
        type: "uint256[]",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "maxMintsPerTx",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "mintSpecial",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nextTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "payee",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "account",
        type: "address",
      },
    ],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "released",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "startingBlock_",
        type: "uint256",
      },
    ],
    name: "setStartingBlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "shares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "startingBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract ERC721DAOToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalReleased",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalShares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611c23806100206000396000f3fe6080604052600436106101485760003560e01c8063a0712d68116100c0578063e33b7de311610074578063ec17b20e11610059578063ec17b20e146103ca578063f2fde38b146103ea578063fc0c546a1461040a57600080fd5b8063e33b7de31461039f578063e8315742146103b457600080fd5b8063ce7c2ac2116100a5578063ce7c2ac214610330578063d91c98d314610373578063dc30158b1461038957600080fd5b8063a0712d68146102fd578063c7ec3be21461031057600080fd5b806375794a3c116101175780638b83209b116100fc5780638b83209b1461024a5780638da5cb5b1461028f5780639852595c146102ba57600080fd5b806375794a3c1461021e5780637ff9b5961461023457600080fd5b806319165587146101a3578063279708e8146101c55780633a98ef39146101e5578063715018a61461020957600080fd5b3661019e577f6ef95f06320e7a25a04a175ca677b7052bdd97131872c2192525a629f51be770336040805173ffffffffffffffffffffffffffffffffffffffff90921682523460208301520160405180910390a1005b600080fd5b3480156101af57600080fd5b506101c36101be36600461187e565b610437565b005b3480156101d157600080fd5b506101c36101e03660046118ce565b610677565b3480156101f157600080fd5b506033545b6040519081526020015b60405180910390f35b34801561021557600080fd5b506101c36107c8565b34801561022a57600080fd5b506101f6609c5481565b34801561024057600080fd5b506101f660995481565b34801561025657600080fd5b5061026a6102653660046119d2565b61083b565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610200565b34801561029b57600080fd5b5060655473ffffffffffffffffffffffffffffffffffffffff1661026a565b3480156102c657600080fd5b506101f66102d536600461187e565b73ffffffffffffffffffffffffffffffffffffffff1660009081526036602052604090205490565b6101c361030b3660046119d2565b610878565b34801561031c57600080fd5b506101c361032b3660046118a2565b610bc9565b34801561033c57600080fd5b506101f661034b36600461187e565b73ffffffffffffffffffffffffffffffffffffffff1660009081526035602052604090205490565b34801561037f57600080fd5b506101f6609b5481565b34801561039557600080fd5b506101f6609a5481565b3480156103ab57600080fd5b506034546101f6565b3480156103c057600080fd5b506101f660985481565b3480156103d657600080fd5b506101c36103e53660046119d2565b610d37565b3480156103f657600080fd5b506101c361040536600461187e565b610da3565b34801561041657600080fd5b5060975461026a9073ffffffffffffffffffffffffffffffffffffffff1681565b73ffffffffffffffffffffffffffffffffffffffff81166000908152603560205260409020546104d45760405162461bcd60e51b815260206004820152602660248201527f5061796d656e7453706c69747465723a206163636f756e7420686173206e6f2060448201527f736861726573000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6000603454476104e49190611a5e565b73ffffffffffffffffffffffffffffffffffffffff831660009081526036602090815260408083205460335460359093529083205493945091926105289085611ab1565b6105329190611a76565b61053c9190611aee565b9050806105b15760405162461bcd60e51b815260206004820152602b60248201527f5061796d656e7453706c69747465723a206163636f756e74206973206e6f742060448201527f647565207061796d656e7400000000000000000000000000000000000000000060648201526084016104cb565b73ffffffffffffffffffffffffffffffffffffffff83166000908152603660205260409020546105e2908290611a5e565b73ffffffffffffffffffffffffffffffffffffffff8416600090815260366020526040902055603454610616908290611a5e565b6034556106238382610e9f565b6040805173ffffffffffffffffffffffffffffffffffffffff85168152602081018390527fdf20fd1e76bc69d672e4814fafb2c449bba3a5369d8359adf9e05e6fde87b056910160405180910390a1505050565b600054610100900460ff1680610690575060005460ff16155b6107025760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084016104cb565b600054610100900460ff16158015610724576000805461ffff19166101011790555b61072e8383610fca565b6107366110bc565b609780547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8a1617905560988790556099869055609a859055609b8490556001609c5580156107be57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff1690555b5050505050505050565b60655473ffffffffffffffffffffffffffffffffffffffff16331461082f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104cb565b61083960006111aa565b565b60006037828154811061085057610850611b6d565b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff1692915050565b609b544310156108f05760405162461bcd60e51b815260206004820152602a60248201527f466978656450726963654d696e7465723a2053616c65206861736e277420737460448201527f617274656420796574210000000000000000000000000000000000000000000060648201526084016104cb565b609a5481111561098e5760405162461bcd60e51b815260206004820152604160248201527f466978656450726963654d696e7465723a2054686572652069732061206c696d60448201527f6974206f6e206d696e74696e6720746f6f206d616e7920617420612074696d6560648201527f2100000000000000000000000000000000000000000000000000000000000000608482015260a4016104cb565b609854816001609c546109a19190611aee565b6109ab9190611a5e565b1115610a1f5760405162461bcd60e51b815260206004820152603860248201527f466978656450726963654d696e7465723a204d696e74696e672074686973206d60448201527f616e7920776f756c642065786365656420737570706c7921000000000000000060648201526084016104cb565b80609954610a2d9190611ab1565b341015610aa25760405162461bcd60e51b815260206004820152602860248201527f466978656450726963654d696e7465723a206e6f7420656e6f7567682065746860448201527f65722073656e742100000000000000000000000000000000000000000000000060648201526084016104cb565b333214610af15760405162461bcd60e51b815260206004820152601f60248201527f466978656450726963654d696e7465723a204e6f20636f6e747261637473210060448201526064016104cb565b60005b81811015610bc55760975473ffffffffffffffffffffffffffffffffffffffff166340c10f1933609c8054906000610b2b83611b05565b909155506040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815273ffffffffffffffffffffffffffffffffffffffff90921660048301526024820152604401600060405180830381600087803b158015610b9a57600080fd5b505af1158015610bae573d6000803e3d6000fd5b505050508080610bbd90611b05565b915050610af4565b5050565b60655473ffffffffffffffffffffffffffffffffffffffff163314610c305760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104cb565b6098548111610ca75760405162461bcd60e51b815260206004820152603660248201527f466978656450726963654d696e7465723a20746f6b656e4964206d757374206260448201527f65206c6172676572207468616e206d6178546f6b656e0000000000000000000060648201526084016104cb565b6097546040517f40c10f1900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff848116600483015260248201849052909116906340c10f1990604401600060405180830381600087803b158015610d1b57600080fd5b505af1158015610d2f573d6000803e3d6000fd5b505050505050565b60655473ffffffffffffffffffffffffffffffffffffffff163314610d9e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104cb565b609b55565b60655473ffffffffffffffffffffffffffffffffffffffff163314610e0a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104cb565b73ffffffffffffffffffffffffffffffffffffffff8116610e935760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016104cb565b610e9c816111aa565b50565b80471015610eef5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064016104cb565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114610f49576040519150601f19603f3d011682016040523d82523d6000602084013e610f4e565b606091505b5050905080610fc55760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016104cb565b505050565b600054610100900460ff1680610fe3575060005460ff16155b6110555760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084016104cb565b600054610100900460ff16158015611077576000805461ffff19166101011790555b61107f611221565b61108983836112fe565b8015610fc557600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055505050565b600054610100900460ff16806110d5575060005460ff16155b6111475760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084016104cb565b600054610100900460ff16158015611169576000805461ffff19166101011790555b611171611221565b611179611501565b8015610e9c57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff16905550565b6065805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff168061123a575060005460ff16155b6112ac5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084016104cb565b600054610100900460ff16158015611179576000805461ffff19166101011790558015610e9c57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff16905550565b600054610100900460ff1680611317575060005460ff16155b6113895760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084016104cb565b600054610100900460ff161580156113ab576000805461ffff19166101011790555b81518351146114225760405162461bcd60e51b815260206004820152603260248201527f5061796d656e7453706c69747465723a2070617965657320616e64207368617260448201527f6573206c656e677468206d69736d61746368000000000000000000000000000060648201526084016104cb565b60008351116114735760405162461bcd60e51b815260206004820152601a60248201527f5061796d656e7453706c69747465723a206e6f2070617965657300000000000060448201526064016104cb565b60005b83518110156114cd576114bb84828151811061149457611494611b6d565b60200260200101518483815181106114ae576114ae611b6d565b60200260200101516115b7565b806114c581611b05565b915050611476565b508015610fc557600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055505050565b600054610100900460ff168061151a575060005460ff16155b61158c5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084016104cb565b600054610100900460ff161580156115ae576000805461ffff19166101011790555b611179336111aa565b73ffffffffffffffffffffffffffffffffffffffff82166116405760405162461bcd60e51b815260206004820152602c60248201527f5061796d656e7453706c69747465723a206163636f756e74206973207468652060448201527f7a65726f2061646472657373000000000000000000000000000000000000000060648201526084016104cb565b600081116116905760405162461bcd60e51b815260206004820152601d60248201527f5061796d656e7453706c69747465723a2073686172657320617265203000000060448201526064016104cb565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260356020526040902054156117295760405162461bcd60e51b815260206004820152602b60248201527f5061796d656e7453706c69747465723a206163636f756e7420616c726561647960448201527f206861732073686172657300000000000000000000000000000000000000000060648201526084016104cb565b60378054600181019091557f42a7b7dd785cd69714a189dffb3fd7d7174edc9ece837694ce50f7078f7c31ae0180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff841690811790915560009081526035602052604090208190556033546117b6908290611a5e565b6033556040805173ffffffffffffffffffffffffffffffffffffffff84168152602081018390527f40c340f65e17194d14ddddb073d3c9f888e3cb52b5aae0c6c7706b4fbc905fac910160405180910390a15050565b600082601f83011261181d57600080fd5b8135602061183261182d83611a3a565b6119eb565b80838252828201915082860187848660051b890101111561185257600080fd5b60005b8581101561187157813584529284019290840190600101611855565b5090979650505050505050565b60006020828403121561189057600080fd5b813561189b81611bcb565b9392505050565b600080604083850312156118b557600080fd5b82356118c081611bcb565b946020939093013593505050565b600080600080600080600060e0888a0312156118e957600080fd5b87356118f481611bcb565b9650602088810135965060408901359550606089013594506080890135935060a089013567ffffffffffffffff8082111561192e57600080fd5b818b0191508b601f83011261194257600080fd5b813561195061182d82611a3a565b8082825285820191508585018f878560051b880101111561197057600080fd5b600095505b8386101561199c57803561198881611bcb565b835260019590950194918601918601611975565b509650505060c08b01359250808311156119b557600080fd5b50506119c38a828b0161180c565b91505092959891949750929550565b6000602082840312156119e457600080fd5b5035919050565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611a3257611a32611b9c565b604052919050565b600067ffffffffffffffff821115611a5457611a54611b9c565b5060051b60200190565b60008219821115611a7157611a71611b3e565b500190565b600082611aac577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611ae957611ae9611b3e565b500290565b600082821015611b0057611b00611b3e565b500390565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611b3757611b37611b3e565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff81168114610e9c57600080fdfea26469706673582212206f4c98875d98c676758c0176f60d40bad08da4aa47b9c7ecd8745d4eaf90d65464736f6c63430008060033";

export class FixedPriceMinter__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FixedPriceMinter> {
    return super.deploy(overrides || {}) as Promise<FixedPriceMinter>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): FixedPriceMinter {
    return super.attach(address) as FixedPriceMinter;
  }
  connect(signer: Signer): FixedPriceMinter__factory {
    return super.connect(signer) as FixedPriceMinter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FixedPriceMinterInterface {
    return new utils.Interface(_abi) as FixedPriceMinterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FixedPriceMinter {
    return new Contract(address, _abi, signerOrProvider) as FixedPriceMinter;
  }
}
