/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  FixedPriceMinter,
  FixedPriceMinterInterface,
} from "../FixedPriceMinter";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
    ],
    name: "PayeeAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PaymentReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PaymentReleased",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract ERC721DAOToken",
        name: "token_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maxTokens_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenPrice_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxMintsPerTx_",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "payees_",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "shares_",
        type: "uint256[]",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "maxMintsPerTx",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "nextTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "payee",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "account",
        type: "address",
      },
    ],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "released",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "shares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract ERC721DAOToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalReleased",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalShares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611550806100206000396000f3fe6080604052600436106100d65760003560e01c8063a0712d681161007f578063e33b7de311610059578063e33b7de314610297578063e8315742146102ac578063fc0c546a146102c2578063fd536f5d146102ef57600080fd5b8063a0712d681461022b578063ce7c2ac21461023e578063dc30158b1461028157600080fd5b80637ff9b596116100b05780637ff9b5961461018d5780638b83209b146101a35780639852595c146101e857600080fd5b806319165587146101315780633a98ef391461015357806375794a3c1461017757600080fd5b3661012c577f6ef95f06320e7a25a04a175ca677b7052bdd97131872c2192525a629f51be770336040805173ffffffffffffffffffffffffffffffffffffffff90921682523460208301520160405180910390a1005b600080fd5b34801561013d57600080fd5b5061015161014c3660046111e2565b61030f565b005b34801561015f57600080fd5b506033545b6040519081526020015b60405180910390f35b34801561018357600080fd5b5061016460695481565b34801561019957600080fd5b5061016460675481565b3480156101af57600080fd5b506101c36101be3660046112ff565b61054f565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161016e565b3480156101f457600080fd5b506101646102033660046111e2565b73ffffffffffffffffffffffffffffffffffffffff1660009081526036602052604090205490565b6101516102393660046112ff565b61058c565b34801561024a57600080fd5b506101646102593660046111e2565b73ffffffffffffffffffffffffffffffffffffffff1660009081526035602052604090205490565b34801561028d57600080fd5b5061016460685481565b3480156102a357600080fd5b50603454610164565b3480156102b857600080fd5b5061016460665481565b3480156102ce57600080fd5b506065546101c39073ffffffffffffffffffffffffffffffffffffffff1681565b3480156102fb57600080fd5b5061015161030a366004611206565b610865565b73ffffffffffffffffffffffffffffffffffffffff81166000908152603560205260409020546103ac5760405162461bcd60e51b815260206004820152602660248201527f5061796d656e7453706c69747465723a206163636f756e7420686173206e6f2060448201527f736861726573000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6000603454476103bc919061138b565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260366020908152604080832054603354603590935290832054939450919261040090856113de565b61040a91906113a3565b610414919061141b565b9050806104895760405162461bcd60e51b815260206004820152602b60248201527f5061796d656e7453706c69747465723a206163636f756e74206973206e6f742060448201527f647565207061796d656e7400000000000000000000000000000000000000000060648201526084016103a3565b73ffffffffffffffffffffffffffffffffffffffff83166000908152603660205260409020546104ba90829061138b565b73ffffffffffffffffffffffffffffffffffffffff84166000908152603660205260409020556034546104ee90829061138b565b6034556104fb83826109c5565b6040805173ffffffffffffffffffffffffffffffffffffffff85168152602081018390527fdf20fd1e76bc69d672e4814fafb2c449bba3a5369d8359adf9e05e6fde87b056910160405180910390a1505050565b6000603782815481106105645761056461149a565b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff1692915050565b60685481111561062a5760405162461bcd60e51b815260206004820152604160248201527f466978656450726963654d696e7465723a2054686572652069732061206c696d60448201527f6974206f6e206d696e74696e6720746f6f206d616e7920617420612074696d6560648201527f2100000000000000000000000000000000000000000000000000000000000000608482015260a4016103a3565b60665481600160695461063d919061141b565b610647919061138b565b11156106bb5760405162461bcd60e51b815260206004820152603860248201527f466978656450726963654d696e7465723a204d696e74696e672074686973206d60448201527f616e7920776f756c642065786365656420737570706c7921000000000000000060648201526084016103a3565b806067546106c991906113de565b34101561073e5760405162461bcd60e51b815260206004820152602860248201527f466978656450726963654d696e7465723a206e6f7420656e6f7567682065746860448201527f65722073656e742100000000000000000000000000000000000000000000000060648201526084016103a3565b33321461078d5760405162461bcd60e51b815260206004820152601f60248201527f466978656450726963654d696e7465723a204e6f20636f6e747261637473210060448201526064016103a3565b60005b818110156108615760655473ffffffffffffffffffffffffffffffffffffffff166340c10f1933606980549060006107c783611432565b909155506040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815273ffffffffffffffffffffffffffffffffffffffff90921660048301526024820152604401600060405180830381600087803b15801561083657600080fd5b505af115801561084a573d6000803e3d6000fd5b50505050808061085990611432565b915050610790565b5050565b600054610100900460ff168061087e575060005460ff16155b6108f05760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084016103a3565b600054610100900460ff1615801561092f57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000166101011790555b6109398383610af0565b606580547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8916179055606686905560678590556068849055600160695580156109bc57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff1690555b50505050505050565b80471015610a155760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064016103a3565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114610a6f576040519150601f19603f3d011682016040523d82523d6000602084013e610a74565b606091505b5050905080610aeb5760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016103a3565b505050565b600054610100900460ff1680610b09575060005460ff16155b610b7b5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084016103a3565b600054610100900460ff16158015610bba57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000166101011790555b610bc2610bff565b610bcc8383610cfb565b8015610aeb57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055505050565b600054610100900460ff1680610c18575060005460ff16155b610c8a5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084016103a3565b600054610100900460ff16158015610cc957600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000166101011790555b8015610cf857600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff1690555b50565b600054610100900460ff1680610d14575060005460ff16155b610d865760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084016103a3565b600054610100900460ff16158015610dc557600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000166101011790555b8151835114610e3c5760405162461bcd60e51b815260206004820152603260248201527f5061796d656e7453706c69747465723a2070617965657320616e64207368617260448201527f6573206c656e677468206d69736d61746368000000000000000000000000000060648201526084016103a3565b6000835111610e8d5760405162461bcd60e51b815260206004820152601a60248201527f5061796d656e7453706c69747465723a206e6f2070617965657300000000000060448201526064016103a3565b60005b8351811015610ee757610ed5848281518110610eae57610eae61149a565b6020026020010151848381518110610ec857610ec861149a565b6020026020010151610f1b565b80610edf81611432565b915050610e90565b508015610aeb57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055505050565b73ffffffffffffffffffffffffffffffffffffffff8216610fa45760405162461bcd60e51b815260206004820152602c60248201527f5061796d656e7453706c69747465723a206163636f756e74206973207468652060448201527f7a65726f2061646472657373000000000000000000000000000000000000000060648201526084016103a3565b60008111610ff45760405162461bcd60e51b815260206004820152601d60248201527f5061796d656e7453706c69747465723a2073686172657320617265203000000060448201526064016103a3565b73ffffffffffffffffffffffffffffffffffffffff82166000908152603560205260409020541561108d5760405162461bcd60e51b815260206004820152602b60248201527f5061796d656e7453706c69747465723a206163636f756e7420616c726561647960448201527f206861732073686172657300000000000000000000000000000000000000000060648201526084016103a3565b60378054600181019091557f42a7b7dd785cd69714a189dffb3fd7d7174edc9ece837694ce50f7078f7c31ae0180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8416908117909155600090815260356020526040902081905560335461111a90829061138b565b6033556040805173ffffffffffffffffffffffffffffffffffffffff84168152602081018390527f40c340f65e17194d14ddddb073d3c9f888e3cb52b5aae0c6c7706b4fbc905fac910160405180910390a15050565b600082601f83011261118157600080fd5b8135602061119661119183611367565b611318565b80838252828201915082860187848660051b89010111156111b657600080fd5b60005b858110156111d5578135845292840192908401906001016111b9565b5090979650505050505050565b6000602082840312156111f457600080fd5b81356111ff816114f8565b9392505050565b60008060008060008060c0878903121561121f57600080fd5b863561122a816114f8565b955060208781013595506040880135945060608801359350608088013567ffffffffffffffff8082111561125d57600080fd5b818a0191508a601f83011261127157600080fd5b813561127f61119182611367565b8082825285820191508585018e878560051b880101111561129f57600080fd5b600095505b838610156112cb5780356112b7816114f8565b8352600195909501949186019186016112a4565b509650505060a08a01359250808311156112e457600080fd5b50506112f289828a01611170565b9150509295509295509295565b60006020828403121561131157600080fd5b5035919050565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561135f5761135f6114c9565b604052919050565b600067ffffffffffffffff821115611381576113816114c9565b5060051b60200190565b6000821982111561139e5761139e61146b565b500190565b6000826113d9577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156114165761141661146b565b500290565b60008282101561142d5761142d61146b565b500390565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156114645761146461146b565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff81168114610cf857600080fdfea2646970667358221220a6bac8de0d3fecc45402b5e5a5072d8041644cb0961ca60a56b81f6d06078fcb64736f6c63430008060033";

export class FixedPriceMinter__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FixedPriceMinter> {
    return super.deploy(overrides || {}) as Promise<FixedPriceMinter>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): FixedPriceMinter {
    return super.attach(address) as FixedPriceMinter;
  }
  connect(signer: Signer): FixedPriceMinter__factory {
    return super.connect(signer) as FixedPriceMinter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FixedPriceMinterInterface {
    return new utils.Interface(_abi) as FixedPriceMinterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FixedPriceMinter {
    return new Contract(address, _abi, signerOrProvider) as FixedPriceMinter;
  }
}
