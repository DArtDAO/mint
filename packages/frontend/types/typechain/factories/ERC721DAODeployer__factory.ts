/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC721DAODeployer,
  ERC721DAODeployerInterface,
} from "../ERC721DAODeployer";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "timelock",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "governor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "minters",
        type: "address[]",
      },
    ],
    name: "ImplementationsSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "timelock",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "governor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "minter",
        type: "address",
      },
    ],
    name: "NewClone",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "creatorAddress",
        type: "address",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
          {
            internalType: "string",
            name: "baseURI",
            type: "string",
          },
        ],
        internalType: "struct ERC721DAODeployer.TokenParams",
        name: "tokenParams",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "proposalThreshold",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "votingDelay",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "votingPeriod",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "quorumNumerator",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timelockDelay",
            type: "uint256",
          },
        ],
        internalType: "struct ERC721DAODeployer.GovernorParams",
        name: "governorParams",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "implementationIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startingBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "creatorShares",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "daoShares",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "extraInitCallData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "extraInitValue",
            type: "uint256",
          },
        ],
        internalType: "struct ERC721DAODeployer.MinterParams",
        name: "minterParams",
        type: "tuple",
      },
    ],
    name: "clone",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "governor",
    outputs: [
      {
        internalType: "contract ERC721Governor",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC721DAOToken",
        name: "token_",
        type: "address",
      },
      {
        internalType: "contract ERC721Timelock",
        name: "timelock_",
        type: "address",
      },
      {
        internalType: "contract ERC721Governor",
        name: "governor_",
        type: "address",
      },
      {
        internalType: "contract IERC721Minter[]",
        name: "minters_",
        type: "address[]",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "minters",
    outputs: [
      {
        internalType: "contract IERC721Minter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC721DAOToken",
        name: "token_",
        type: "address",
      },
      {
        internalType: "contract ERC721Timelock",
        name: "timelock_",
        type: "address",
      },
      {
        internalType: "contract ERC721Governor",
        name: "governor_",
        type: "address",
      },
      {
        internalType: "contract IERC721Minter[]",
        name: "minters_",
        type: "address[]",
      },
    ],
    name: "setImplementations",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "timelock",
    outputs: [
      {
        internalType: "contract ERC721Timelock",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract ERC721DAOToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611b67806100206000396000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c8063d33219b411610076578063e885d5251161005b578063e885d5251461018d578063f2fde38b146101a0578063fc0c546a146101b357600080fd5b8063d33219b41461015a578063e6bfbfd81461017a57600080fd5b8063736059cc116100a7578063736059cc146101165780638623ec7b146101295780638da5cb5b1461013c57600080fd5b80630c340a24146100c3578063715018a61461010c575b600080fd5b6067546100e39073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b6101146101d3565b005b6101146101243660046115d4565b61024b565b6100e361013736600461167f565b6102c6565b60335473ffffffffffffffffffffffffffffffffffffffff166100e3565b6066546100e39073ffffffffffffffffffffffffffffffffffffffff1681565b6101146101883660046115d4565b6102fd565b61011461019b366004611518565b610413565b6101146101ae3660046114fb565b610bf6565b6065546100e39073ffffffffffffffffffffffffffffffffffffffff1681565b60335473ffffffffffffffffffffffffffffffffffffffff16331461023f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6102496000610cf2565b565b60335473ffffffffffffffffffffffffffffffffffffffff1633146102b25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610236565b6102bf8585858585610d69565b5050505050565b606881815481106102d657600080fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905081565b600054610100900460ff1680610316575060005460ff16155b6103885760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608401610236565b600054610100900460ff161580156103c757600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000166101011790555b6103cf610e25565b6103dc8686868686610d69565b801561040b57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff1690555b505050505050565b6065546000906104389073ffffffffffffffffffffffffffffffffffffffff16610f30565b6066549091506000906104609073ffffffffffffffffffffffffffffffffffffffff16610f30565b6067549091506000906104889073ffffffffffffffffffffffffffffffffffffffff16610f30565b905060006104cd60688660000135815481106104a6576104a6611a88565b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16610f30565b60408051600280825260608201835292935060009290916020830190803683375050606554604080517fb3ecf236000000000000000000000000000000000000000000000000000000008152905193945073ffffffffffffffffffffffffffffffffffffffff9091169263b3ecf23692506004808301926020929190829003018186803b15801561055d57600080fd5b505afa158015610571573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059591906115bb565b816000815181106105a8576105a8611a88565b602090810291909101810191909152606554604080517fea35f36c000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff9092169263ea35f36c92600480840193829003018186803b15801561061c57600080fd5b505afa158015610630573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065491906115bb565b8160018151811061066757610667611a88565b60209081029190910101526040805160028082526060820190925260009181602001602082028036833701905050905084816000815181106106ab576106ab611a88565b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505082816001815181106106f9576106f9611a88565b73ffffffffffffffffffffffffffffffffffffffff9283166020918202929092010152861662b06c2161072c8b8061198c565b61073960208e018e61198c565b8e8060400190610749919061198c565b89896040518963ffffffff1660e01b815260040161076e989796959493929190611879565b600060405180830381600087803b15801561078857600080fd5b505af115801561079c573d6000803e3d6000fd5b5060009450600193506107ae92505050565b6040519080825280602002602001820160405280156107d7578160200160208202803683370190505b50905082816000815181106107ee576107ee611a88565b73ffffffffffffffffffffffffffffffffffffffff929092166020928302919091019091015260408051600180825281830190925260009181602001602082028036833701905050905060008160008151811061084d5761084d611a88565b73ffffffffffffffffffffffffffffffffffffffff92831660209182029290920101526040517f7fbc79c600000000000000000000000000000000000000000000000000000000815290861690637fbc79c6906108b69060a08c01359086908690600401611961565b600060405180830381600087803b1580156108d057600080fd5b505af11580156108e4573d6000803e3d6000fd5b50505073ffffffffffffffffffffffffffffffffffffffff851692506374fe291691506109139050888061198c565b87878b602001358c604001358d606001358e608001356040518963ffffffff1660e01b815260040161094c98979695949392919061181d565b600060405180830381600087803b15801561096657600080fd5b505af115801561097a573d6000803e3d6000fd5b50600092506002915061098a9050565b6040519080825280602002602001820160405280156109b3578160200160208202803683370190505b50905088816000815181106109ca576109ca611a88565b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508381600181518110610a1857610a18611a88565b73ffffffffffffffffffffffffffffffffffffffff929092166020928302919091018201526040805160028082526060820183526000939192909183019080368337019050509050866040013581600081518110610a7857610a78611a88565b602002602001018181525050866060013581600181518110610a9c57610a9c611a88565b6020026020010181815250508273ffffffffffffffffffffffffffffffffffffffff1663e823170c8b888a6020013586866040518663ffffffff1660e01b8152600401610aed959493929190611799565b600060405180830381600087803b158015610b0757600080fd5b505af1158015610b1b573d6000803e3d6000fd5b50610b889250610b31915050608089018961198c565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505073ffffffffffffffffffffffffffffffffffffffff87169291505060a08a0135610ff8565b50506040805173ffffffffffffffffffffffffffffffffffffffff87811682528681166020830152858116828401528416606082015290517f078b094a1dfa581e1f9507655977a5d0105a70c3a7257bd50f3c9adf967b57fd92509081900360800190a15050505050505050565b60335473ffffffffffffffffffffffffffffffffffffffff163314610c5d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610236565b73ffffffffffffffffffffffffffffffffffffffff8116610ce65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610236565b610cef81610cf2565b50565b6033805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6065805473ffffffffffffffffffffffffffffffffffffffff8088167fffffffffffffffffffffffff000000000000000000000000000000000000000092831617909255606680548784169083161790556067805492861692909116919091179055610dd760688383611446565b507f047e032a49c323b2e80b7c0d01aa618b1cc8e3899345788743de973b43fb8810858585610e068686611028565b604051610e16949392919061174e565b60405180910390a15050505050565b600054610100900460ff1680610e3e575060005460ff16155b610eb05760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608401610236565b600054610100900460ff16158015610eef57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000166101011790555b610ef76110f4565b610eff6111ee565b8015610cef57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff16905550565b60006040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528260601b60148201527f5af43d82803e903d91602b57fd5bf3000000000000000000000000000000000060288201526037816000f091505073ffffffffffffffffffffffffffffffffffffffff8116610ff35760405162461bcd60e51b815260206004820152601660248201527f455243313136373a20637265617465206661696c6564000000000000000000006044820152606401610236565b919050565b606061101e848484604051806060016040528060298152602001611b09602991396112c1565b90505b9392505050565b606060008267ffffffffffffffff81111561104557611045611ab7565b60405190808252806020026020018201604052801561106e578160200160208202803683370190505b50905060005b838110156110ec5784848281811061108e5761108e611a88565b90506020020160208101906110a391906114fb565b8282815181106110b5576110b5611a88565b73ffffffffffffffffffffffffffffffffffffffff90921660209283029190910190910152806110e481611a28565b915050611074565b509392505050565b600054610100900460ff168061110d575060005460ff16155b61117f5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608401610236565b600054610100900460ff16158015610eff57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000166101011790558015610cef57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff16905550565b600054610100900460ff1680611207575060005460ff16155b6112795760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608401610236565b600054610100900460ff161580156112b857600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000166101011790555b610eff33610cf2565b6060824710156113395760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610236565b843b6113875760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610236565b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516113b09190611732565b60006040518083038185875af1925050503d80600081146113ed576040519150601f19603f3d011682016040523d82523d6000602084013e6113f2565b606091505b509150915061140282828661140d565b979650505050505050565b6060831561141c575081611021565b82511561142c5782518084602001fd5b8160405162461bcd60e51b81526004016102369190611910565b8280548282559060005260206000209081019282156114be579160200282015b828111156114be5781547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff843516178255602090920191600190910190611466565b506114ca9291506114ce565b5090565b5b808211156114ca57600081556001016114cf565b600060c082840312156114f557600080fd5b50919050565b60006020828403121561150d57600080fd5b813561102181611ae6565b6000806000806080858703121561152e57600080fd5b843561153981611ae6565b9350602085013567ffffffffffffffff8082111561155657600080fd5b908601906060828903121561156a57600080fd5b9093506040860135908082111561158057600080fd5b61158c888389016114e3565b935060608701359150808211156115a257600080fd5b506115af878288016114e3565b91505092959194509250565b6000602082840312156115cd57600080fd5b5051919050565b6000806000806000608086880312156115ec57600080fd5b85356115f781611ae6565b9450602086013561160781611ae6565b9350604086013561161781611ae6565b9250606086013567ffffffffffffffff8082111561163457600080fd5b818801915088601f83011261164857600080fd5b81358181111561165757600080fd5b8960208260051b850101111561166c57600080fd5b9699959850939650602001949392505050565b60006020828403121561169157600080fd5b5035919050565b600081518084526020808501945080840160005b838110156116de57815173ffffffffffffffffffffffffffffffffffffffff16875295820195908201906001016116ac565b509495945050505050565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b600082516117448184602087016119f8565b9190910192915050565b600073ffffffffffffffffffffffffffffffffffffffff808716835280861660208401528085166040840152506080606083015261178f6080830184611698565b9695505050505050565b600073ffffffffffffffffffffffffffffffffffffffff808816835260208188168185015286604085015260a060608501526117d860a0850187611698565b8481036080860152855180825282870193509082019060005b8181101561180d578451835293830193918301916001016117f1565b50909a9950505050505050505050565b60e08152600061183160e083018a8c6116e9565b73ffffffffffffffffffffffffffffffffffffffff98891660208401529690971660408201526060810194909452608084019290925260a083015260c0909101529392505050565b60a08152600061188d60a083018a8c6116e9565b6020838203818501526118a1828a8c6116e9565b915083820360408501526118b682888a6116e9565b8481036060860152865180825282880193509082019060005b818110156118eb578451835293830193918301916001016118cf565b505084810360808601526118ff8187611698565b9d9c50505050505050505050505050565b602081526000825180602084015261192f8160408501602087016119f8565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b83815260606020820152600061197a6060830185611698565b828103604084015261178f8185611698565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126119c157600080fd5b83018035915067ffffffffffffffff8211156119dc57600080fd5b6020019150368190038213156119f157600080fd5b9250929050565b60005b83811015611a135781810151838201526020016119fb565b83811115611a22576000848401525b50505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611a81577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff81168114610cef57600080fdfe416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564a2646970667358221220ca629dacc0519a58fa0bd5d4716856eb58c0d0a945946661159b2f74d792c8d264736f6c63430008060033";

type ERC721DAODeployerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721DAODeployerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721DAODeployer__factory extends ContractFactory {
  constructor(...args: ERC721DAODeployerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC721DAODeployer> {
    return super.deploy(overrides || {}) as Promise<ERC721DAODeployer>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC721DAODeployer {
    return super.attach(address) as ERC721DAODeployer;
  }
  connect(signer: Signer): ERC721DAODeployer__factory {
    return super.connect(signer) as ERC721DAODeployer__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721DAODeployerInterface {
    return new utils.Interface(_abi) as ERC721DAODeployerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721DAODeployer {
    return new Contract(address, _abi, signerOrProvider) as ERC721DAODeployer;
  }
}
